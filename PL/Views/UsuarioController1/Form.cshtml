@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class=" container">
    <h2>Usuario</h2>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "UsuarioController1", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">

                    <div class="form-group">

                        <div class="col-md-3" style="display :none;">

                            @Html.LabelFor(model => model.IdUsuario, new { @class = "hidden" })

                            @Html.TextBoxFor(model => model.IdUsuario, new { @class = "hidden form-control" })

                            @Html.ValidationMessageFor(model => model.IdUsuario)

                        </div>

                        </div>
                      <div class="row">
                        
                          <div class="col-4">
                            <h5 style="color: MediumVioletRed">Datos personales</h5>
                            <div class="form-group">
                            @Html.LabelFor(model => model.Nombre)
                            <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person-rolodex" style="color: MediumVioletRed"></i></span>
                                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @placeholder="Ejemplo: Maria", @onkeypress = "return SoloLetras(event,'lblNombre')"})
                            @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger"})
                                    @Html.Label("",null, new {@id="lblNombre"})
                        </div>
                   
                        </div>
                            <div class="form-group">
                            @Html.LabelFor(model => model.ApellidoPaterno)
                            <div class="input-group mb-3" >
                                    <span class="input-group-text" ><i class="bi bi-person-rolodex" style="color: MediumVioletRed"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @placeholder="Ejemplo: Lopéz" , @onkeypress = "return SoloLetras(event,'lblApellidoPaterno')"})
                                @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                                    @Html.Label("",null, new {@id="lblApellidoPaterno"})
                            </div>
                        </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ApellidoMaterno)
                                 <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person-rolodex" style="color: MediumVioletRed"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno", @placeholder="Ejemplo: Lopéz", @onkeypress = "return SoloLetras(event,'lblApellidoMaterno')"})
                                    @Html.Label("",null, new {@id="lblApellidoMaterno"})
                            </div>
                        </div>
                        <div class="form-group">
                           
                                @Html.LabelFor(model => model.Sexo)
                                @if (Model.Sexo == null) 
                                {
                                    <p></p>
                                    <t>   Hombre</t>
                                    @Html.RadioButtonFor(model => model.Sexo, "H" , new {  @id = "sex" })
                                    <t>Mujer</t>
                                    @Html.RadioButtonFor(model => model.Sexo, "M", new { @id = "sexo" })
                                }
                                else
                                {
                                
                                }
                                @Html.ValidationMessageFor(model => model.Sexo)
                            </div>
                       
                        <p></p>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaDeNacimiento)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-table" style="color: MediumVioletRed"></i></span>
                                    @Html.TextBoxFor(model => model.FechaDeNacimiento, new { @class = "form-control", @id ="datepicker" })
                                    @Html.ValidationMessageFor(model => model.FechaDeNacimiento)
                                </div>
                            </div>

                            <div class="form-group">
                                    @Html.LabelFor(model => model.CURP)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person-vcard-fill" style="color: MediumVioletRed"></i></span>

                                    @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", @id = "txtNombre" , @onkeypress = "return SoloCURP(event,'lblCURP')" })
                                    @Html.ValidationMessageFor(model => model.CURP)
                                    @Html.Label("",null, new {@id="lblCURP"})
                                </div>
                                 </div>
                    </div>

                    
                      <div class="col-4">
                            <h5 style ="color: MediumVioletRed">Datos de contacto</h5>
                       <div class="form-group">
                        @Html.LabelFor(model => model.Telefono)
                        <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-telephone" style="color: MediumVioletRed"></i></span>
                                    @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "numTele" , @onkeypress = "return SoloNumeros(event,'lblTelefono')" })
                            @Html.ValidationMessageFor(model => model.Telefono)
                            @Html.Label("",null, new {@id="lblTelefono"})
                        </div>
                    </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Celular)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-telephone-fill" style="color: MediumVioletRed"></i></span>
                                    @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @id = "txtNombre" })
                                    @Html.ValidationMessageFor(model => model.Celular)
                                </div>
                            </div>
                            <div class="form-group">
                            @Html.LabelFor(model => model.Email)
                            <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-envelope-at" style="color: MediumVioletRed"></i></span>
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" , @onchange = "return SoloEmail(event,'txtEmaill')" })
                            @Html.ValidationMessageFor(model => model.Email)
                                    @Html.Label("",null, new {@id="lblEmail"})
                        </div>
                    </div>
                            <h5 style="color: MediumVioletRed">Datos de cuenta</h5>
                            <div class="form-group">
                                    @Html.LabelFor(model => model.Rol.IdRol)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-diagram-2-fill" style="color: MediumVioletRed"></i></span>

                                    @* @Html.TextBoxFor(model => model.Rol.IdRol, new { @class = "form-control", @id = "txtNombre" })*@
                                    @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "NombreRol"), "Selecciona una opción", new { @class = "form-control" , @style="color: MediumVioletRed"})
                                    @Html.ValidationMessageFor(model => model.Rol.IdRol)
                                </div>
                            </div>
                            <div class="form-group">
                                
                                    @Html.LabelFor(model => model.UserName)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-person-gear" style="color: MediumVioletRed"></i></span>

                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "txtNombre" })
                                    @Html.ValidationMessageFor(model => model.UserName)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password)
                                <div class="input-group mb-3">
                                    <span class="input-group-text"><i class="bi bi-eye-slash" style="color: MediumVioletRed"></i></span>
                                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password"})
                                    @Html.ValidationMessageFor(model => model.Password)
                                </div>
                            </div>


                     </div>
                       <div class="col-4">
                            <h5 style="color: MediumVioletRed">Fotografia</h5>
                        @*Ingresar imagen*@
                        <div class="offset-md-12">

                            @Html.LabelFor(model => model.Imagen)
                            <div class="input-group mb-3">
                                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image" style="color: MediumVioletRed"></i></span>
                                <input id="IFImage" type="file" class="form-control" name="IFImage" onchange="validateFile(this), readURL(this);  " />
                            </div>
                            @if (Model.Imagen != null)
                            {
                                <img id="Imag" src="data:image/*;base64,@Model.Imagen" width="300" height="350" />
                            }
                            else
                            {
                                    <img id="Imag" src="~/Imagenes/userRosa.jpg" width="300" height="300" />
                            }
                            @Html.ValidationMessageFor(model => model.Imagen)

                        </div>
                        @Html.HiddenFor(model => model.Imagen)
                    </div>
                    </div>
                    <hr style="color: MediumVioletRed"/>
                  <div class="row">

                        <div class="form-group">
                             <div class="col-md-3">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)

                                <div class="input-group mb-3">
                                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-building-fill" style="color: MediumVioletRed"></i></span>@* @Html.TextBoxFor(model => model.Rol.IdRol, new { @class = "form-control", @id = "txtNombre" })*@
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona una opción", new { id = "ddIPais", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                            </div>
                            </div>
                        </div>
                        
                            <div class="form-group">
                                <div class="col-md-3">
                   
                                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                                    @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Seleciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                                    }
                                </div>
                            </div>

                    </div>
               
                    
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                                @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                                {
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                                }
                            </div>
                        </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.IdColonia)
                            @if (Model.Direccion.Colonia.Colonias == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(model => model.Imagen)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Calle)
                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @id = "txtNombre" })
                            @Html.ValidationMessageFor(model => model.Direccion.Calle)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.NumeroInterior)
                            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @id = "txtNombre" })
                            @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.NumeroExterior)
                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @id = "txtNombre" })
                            @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                        </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>


                

            }
        </div>
    </div>
</div>




@section Scripts
{
<script src="~/lib/jquery/dist/jquery.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

         $("#ddIPais").change(function ()
        {
            $("#ddlEstado").empty();
            $.ajax
                ({
                    type: 'POST',
                    url: '@Url.Action("GetEstado")',
                    dataType: 'json',
                    data: { IdPais: $("#ddIPais").val() },
                    success: function (estados)
                    {
                        $("#ddlEstado").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                        $.each(estados, function (i, estados)
                        {
                            $("#ddlEstado").append('<option value="'
                                + estados.idEstado + '">'
                                + estados.nombre + '</option>');
                        });
                    },
                    error: function (ex)
                    {
                        alert('Failed.' + ex);
                    }
            });
        })

        $("#ddlEstado").change(function ()
        {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipio")',
                dataType: 'json',
                data: { IdEstado: $("#ddlEstado").val() },
                success: function (municipios)
                {
                    $("#ddlMunicipio").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(municipios, function (i, municipios)
                    {
                        $("#ddlMunicipio").append('<option value="'
                            + municipios.idMunicipio + '">'
                            + municipios.nombre + '</option>');
                    });
                },
                error: function (ex)
                {
                    alert('Failed.' + ex);
                }
            });
        })
         $("#ddlMunicipio").change(function ()
        {
            $("#ddlColonia").empty();
            $.ajax
                ({
                    type: 'POST',
                    url: '@Url.Action("GetColonia")',
                    dataType: 'json',
                    data: { IdMunicipio: $("#ddlMunicipio").val() },
                    success: function (colonias)
                    {
                        $("#ddlColonia").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                        $.each(colonias, function (i, colonias)
                        {
                            $("#ddlColonia").append('<option value="'
                                + colonias.idColonia + '">'
                                + colonias.nombre + '</option>');
                        });
                    },
                    error: function (ex)
                    {
                        alert('Failed.' + ex);
                    }
            });
         })
          $(function () 
        {
            $("#datepicker").datepicker
            ({
                
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                changeYear: true,
                yearRange: '-50:+0'
            });
        });
            
    })

        function SoloNumeros(e, controlId) {
            var caracter = e.key;
            if (!/^[0-9]/g.test(caracter)) {
                $('#' + controlId).text("Solo se aceptan numeros");
                $('#' + controlId).css({ "color": "red" });
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        }

        function SoloLetras(e, controlId) {
            var caracter = e.key;
            if (!/^[A-Za-z ]/g.test(caracter)) {
                $('#' + controlId).text("Solo se aceptan letras");
                $('#' + controlId).css({ "color": "red" });
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        }

          
</script>

}



